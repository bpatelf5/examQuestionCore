{
	"info": {
		"_postman_id": "12c6cb2a-a750-4a73-a600-f0ebdc6b9b59",
		"name": "ExamQuestion",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get schools as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get schools as student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].id).to.gte(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('Conestoga College');\r",
							"    pm.globals.set(\"schoolId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/school",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"school"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get profs as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get profs as student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].id).to.gte(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('Fred Smith');\r",
							"    pm.globals.set(\"profId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/user/{{schoolId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"user",
						"{{schoolId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get courses as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get courses as student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].id).to.gte(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('PROG8185');\r",
							"    pm.expect(jsonData[0].year).to.eq(2020);\r",
							"    pm.expect(jsonData[0].semester).to.eq('Fall');\r",
							"    pm.expect(jsonData[0].userId).to.eq(pm.globals.get(\"profId\"));\r",
							"    pm.globals.set(\"courseId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/course/user/{{profId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"course",
						"user",
						"{{profId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get exams as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get exams as student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].id).to.gte(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('Midterm');\r",
							"    pm.expect(jsonData[0].durationMinutes).to.eq(120);\r",
							"    pm.expect(jsonData[0].isLimitedAccess).to.eq(false);\r",
							"    pm.expect(jsonData[0].courseId).to.eq(pm.globals.get(\"courseId\"));\r",
							"    pm.globals.set(\"examId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/exam/course/{{courseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"exam",
						"course",
						"{{courseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get students as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get students as student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].id).to.gte(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('Joe Student');\r",
							"    pm.expect(jsonData[0].courseId).to.eq(0);\r",
							"    pm.expect(jsonData[0].number).to.eq(undefined);\r",
							"    pm.globals.set(\"studentId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/student/course/{{courseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"student",
						"course",
						"{{courseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get assignment as student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"assignment file downloaded\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\": \"{{studentId}}\",\r\n    \"studentNumber\": \"123\",\r\n    \"authenticationCode\": \"abc\",\r\n    \"examId\": \"{{examId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/assignment/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"assignment",
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get assignment as student - bad examId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"assignment file not downloaded\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\": \"{{studentId}}\",\r\n    \"studentNumber\": \"123\",\r\n    \"authenticationCode\": \"abc\",\r\n    \"examId\": \"7\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/assignment/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"assignment",
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get assignment as student - bad auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"assignment file not downloaded\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\": \"{{studentId}}\",\r\n    \"studentNumber\": \"123\",\r\n    \"authenticationCode\": \"abcd\",\r\n    \"examId\": \"{{examId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/assignment/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"assignment",
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get assignment as student - bad number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"assignment file not downloaded\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\": \"{{studentId}}\",\r\n    \"studentNumber\": \"1234\",\r\n    \"authenticationCode\": \"abc\",\r\n    \"examId\": \"{{examId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/assignment/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"assignment",
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get assignment as student - bad studentId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"assignment file not downloaded\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\": \"7\",\r\n    \"studentNumber\": \"123\",\r\n    \"authenticationCode\": \"abc\",\r\n    \"examId\": \"{{examId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/assignment/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"assignment",
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get assignments not logged in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get assignments not logged in\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/assignment/exam/{{examId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"assignment",
						"exam",
						"{{examId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get courses not logged in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get courses not logged in\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/course",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"course"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get documents not logged in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get documents not logged in\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/document",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"document"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get exams not logged in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get exams not logged in\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/exam",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"exam"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get questions not logged in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get questions not logged in\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/question",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"question"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Info fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get user info fail\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/account/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register no data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Register - No Data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes[0]).to.eql('InvalidCredentials');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register bad email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Register - Bad Email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes[0]).to.eql('InvalidCredentials');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"ab\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register weak password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Register - weak password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes[0]).to.eql('WeakPassword');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"b@b.co\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Register - Success\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gt(0);\r",
							"    pm.globals.set(\"userId\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"a@a.co\",\r\n    \"password\": \"ifG24pB$6P8FaD#Y$QuK\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register email in use",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Register - email in use\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes[0]).to.eql('EmailInUse');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"a@a.co\",\r\n    \"password\": \"ifG24pB$6P8FaD#Y$QuK\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Info success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get user info success\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.name).to.eql(undefined);\r",
							"    pm.expect(jsonData.email).to.eql('a@a.co');\r",
							"    pm.expect(jsonData.schoolId).to.eql(undefined);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/account/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user fail no data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update user fail\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes.indexOf('InvalidEmail')).to.gte(0);\r",
							"    pm.expect(jsonData.responseCodes.indexOf('InvalidName')).to.gte(0);\r",
							"    pm.expect(jsonData.responseCodes.indexOf('InvalidSchool')).to.gte(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/user/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update user success\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"a@a.co\",\r\n    \"name\": \"Alex Angelo\",\r\n    \"schoolId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/user/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify User Info Change",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify user info change\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.name).to.eql('Alex Angelo');\r",
							"    pm.expect(jsonData.email).to.eql('a@a.co');\r",
							"    pm.expect(jsonData.schoolId).to.eql(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/account/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Password Change invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Change password invalid data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes.indexOf('InvalidPassword')).to.gte(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/password/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"password",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Password Change wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Change password wrong password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes.indexOf('InvalidPassword')).to.gte(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"abc\",\r\n    \"newPassword\": \"def\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/password/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"password",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Password Change weak password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Change password weak password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes.indexOf('WeakPassword')).to.gte(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"ifG24pB$6P8FaD#Y$QuK\",\r\n    \"newPassword\": \"def\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/password/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"password",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Password Change success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Change password success\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.globals.get('userId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\": \"ifG24pB$6P8FaD#Y$QuK\",\r\n    \"newPassword\": \"qfG24pB$6P8FaD#Y$QuK\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/password/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"password",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.globals.get(\"userId\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/account/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/account/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login no credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login no credentials\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login wrong password\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes[0]).to.eql('IncorrectCredentials');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"fred@smith.co\",\r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login invalid email\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(0);\r",
							"    pm.expect(jsonData.responseCodes[0]).to.eql('IncorrectCredentials');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"xxx\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login success\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"fred@smith.co\",\r\n    \"password\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/account/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get schools",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get schools\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].id).to.gte(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('Conestoga College');\r",
							"    pm.globals.set(\"schoolId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/school",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"school"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add school",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add new school\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"    pm.globals.set(\"newSchoolId\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\": \"New School\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/school",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"school"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit school",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit new school\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newSchoolId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{newSchoolId}},\r\n    \"name\": \"New New School\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/school/{{newSchoolId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"school",
						"{{newSchoolId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify school",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify new school\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.gt(1);\r",
							"    var newSchool = jsonData.find(s => s.id == pm.globals.get('newSchoolId'));\r",
							"    pm.expect(newSchool.name).to.eq('New New School');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/school",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"school"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete school",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete new school\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newSchoolId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/school/{{newSchoolId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"school",
						"{{newSchoolId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get students",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get students\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].id).to.gte(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('Joe Student');\r",
							"    pm.expect(jsonData[0].number).to.eq('123');\r",
							"    pm.expect(jsonData[0].courseId).to.eq(pm.globals.get('courseId'));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/student/course/{{courseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"student",
						"course",
						"{{courseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add new student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"    pm.globals.set(\"newStudentId\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"New Student\",\r\n    \"number\": \"1\",\r\n    \"courseId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit new student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newStudentId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{newStudentId}},\r\n    \"name\": \"New New Student\",\r\n    \"number\": \"12\",\r\n    \"courseId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/student/{{newStudentId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"student",
						"{{newStudentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify new student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.gt(1);\r",
							"    var newStudent = jsonData.find(s => s.id == pm.globals.get('newStudentId'));\r",
							"    pm.expect(newStudent.name).to.eq('New New Student');\r",
							"    pm.expect(newStudent.number).to.eq('12');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/student/course/{{courseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"student",
						"course",
						"{{courseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete new student\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newStudentId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/student/{{newStudentId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"student",
						"{{newStudentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get courses\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].name).to.eql('PROG8185');\r",
							"    pm.globals.set(\"courseId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/course",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"course"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add new course\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"    pm.globals.set(\"newCourseId\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"New course\",\r\n    \"year\": 2025,\r\n    \"semester\": \"Fall\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/course",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"course"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit course\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(pm.globals.get('newCourseId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": {{newCourseId}},\r\n    \"name\": \"New New Course\",\r\n    \"year\": 2026,\r\n    \"semester\": \"Spring\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/course/{{newCourseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"course",
						"{{newCourseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify new course\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.gt(1);\r",
							"    var newCourse = jsonData.find(s => s.id == pm.globals.get('newCourseId'));\r",
							"    pm.expect(newCourse.name).to.eq('New New Course');\r",
							"    pm.expect(newCourse.year).to.eq(2026);\r",
							"    pm.expect(newCourse.semester).to.eq('Spring');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/course",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"course"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete new course\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newCourseId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/course/{{newCourseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"course",
						"{{newCourseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get exams",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get exams\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].name).to.eq('Midterm');\r",
							"    pm.expect(jsonData[0].courseId).to.eq(1);\r",
							"    pm.globals.set(\"examId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/exam",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"exam"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add exam",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add new exam\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"    pm.globals.set(\"newExamId\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"const examStart = moment().add(3, 'days').format();\r",
							"pm.globals.set(\"examStart\", examStart);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"New exam\",\r\n    \"start\": \"{{examStart}}\",\r\n    \"durationMinutes\": 60,\r\n    \"authenticationCode\": \"abc\",\r\n    \"isLimitedAccess\": false,\r\n    \"courseId\": {{courseId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/exam",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"exam"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit exam",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit exam\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(pm.globals.get('newExamId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"New new exam\",\r\n    \"start\": \"{{examStart}}\",\r\n    \"durationMinutes\": 120,\r\n    \"authenticationCode\": \"def\",\r\n    \"isLimitedAccess\": true,\r\n    \"courseId\": {{courseId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/exam/{{newExamId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"exam",
						"{{newExamId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify exam",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify new exam\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.gt(1);\r",
							"    var newExam = jsonData.find(s => s.id == pm.globals.get('newExamId'));\r",
							"    pm.expect(newExam.name).to.eq('New new exam');\r",
							"    pm.expect(newExam.durationMinutes).to.eq(120);\r",
							"    pm.expect(newExam.authenticationCode).to.eq('def');\r",
							"    pm.expect(newExam.isLimitedAccess).to.eq(true);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/exam",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"exam"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete exam",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete new exam\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newExamId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/exam/{{newExamId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"exam",
						"{{newExamId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get questions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get questions\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(1);\r",
							"    pm.expect(jsonData[0].examId).to.eq(1);\r",
							"    pm.expect(jsonData[0].description).to.eq('Question 1');\r",
							"    pm.globals.set(\"questionId\", jsonData[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/question",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"question"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add question",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add new question\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"    pm.globals.set(\"newQuestionId\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"New question\",\r\n    \"examId\": {{examId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/question",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"question"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit question",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit question\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(pm.globals.get('newQuestionId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"New new question\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/question/{{newQuestionId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"question",
						"{{newQuestionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify question",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify new question\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.gt(1);\r",
							"    var newExam = jsonData.find(s => s.id == pm.globals.get('newQuestionId'));\r",
							"    pm.expect(newExam.description).to.eq('New new question');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/question",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"question"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete question",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete new question\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newQuestionId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/question/{{newQuestionId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"question",
						"{{newQuestionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get documents",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get documents\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eq(2);\r",
							"    pm.expect(jsonData[0].publicFileName.length).to.gt(0);\r",
							"    pm.expect(jsonData[0].url.length).to.gt(0);\r",
							"    pm.expect(jsonData[1].publicFileName.length).to.gt(0);\r",
							"    pm.expect(jsonData[1].url.length).to.gt(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/document",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"document"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add document",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add new document\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"    pm.globals.set(\"newDocumentId\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"publicFileName\": \"New document\",\r\n    \"url\": \"url 1\",\r\n    \"questionId\": {{questionId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/document",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"document"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit document",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Edit document\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(pm.globals.get('newDocumentId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"publicFileName\": \"New new document\",\r\n    \"url\": \"url 2\",\r\n    \"questionId\": {{questionId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/document/{{newDocumentId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"document",
						"{{newDocumentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify document",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify new document\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.gt(1);\r",
							"    var newDocument = jsonData.find(s => s.id == pm.globals.get('newDocumentId'));\r",
							"    pm.expect(newDocument.publicFileName).to.eq('New new document');\r",
							"    pm.expect(newDocument.url).to.eq('url 2');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/document",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"document"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete document",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete new document\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eq(pm.globals.get('newDocumentId'));\r",
							"    pm.expect(jsonData.responseCodes.length).to.eq(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/document/{{newDocumentId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"document",
						"{{newDocumentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get assignments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get assignments\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.gt(0);\r",
							"    pm.expect(jsonData[0].downloaded.length).to.gt(0);\r",
							"    pm.expect(jsonData[0].ip.length).to.gt(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/assignment/exam/{{examId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"assignment",
						"exam",
						"{{examId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.gte(1);\r",
							"    pm.expect(jsonData.responseCodes.length).to.eql(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/account/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"account",
						"logout"
					]
				}
			},
			"response": []
		}
	]
}